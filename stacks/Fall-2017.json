{
    "Problem_Name": "String Shenanigans",
    "Seen_On": "Fall 2017",
    "Problem_Statement": "Suppose we pass the string “cupcake” to the following function. What will the function’s output be, and what will the stacks s1 and s2 look like when the function terminates? \nYou may assume the stack functions are written correctly and that the stacks are designed for holding characters.",
    "Problem_Code": "void string_shenanigans(char *str)\n{\n\tint i, len = strlen(str);\n\tchar *new_string = malloc(sizeof(char) * (len + 1));\n\tStack s1, s2;\n\tinit(&s1);\n\tinit(&s2);\n\tfor (i = 0; i < len; i++) {\n\t\tpush(&s1, str[i]); // this pushes onto stack s1\n\t\tpush(&s2, str[i]); // this pushes onto stack s2} \n\tfor (i = 0; i < len; i++) {\n\t\tif (i % 2 == 0) {\n\t\t// Note: pop() returns the character being removed from the stack.\n\t\t\tif (!isEmpty(&s1))\n\t\t\t\tnew_string[i] = pop(&s1);\n\t\t\tif (!isEmpty(&s1))\n\t\t\t\tpush(&s2, pop(&s1));}\n\t\telse {\n\t\t\tpop(&s2);\n\t\t\tnew_string[i] = pop(&s2);\n\t\t}\n\t}\n\tnew_string[len] = '\\0';\n\tprintf('%s\\n', new_string);\n\tfree(new_string);\n}",
    "Solution": "https://fetchitbucket.s3.us-east-2.amazonaws.com/FE/stack/fall-2017.PNG"
}