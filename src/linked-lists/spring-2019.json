{
 "Problem_Name": " (10 pts) ALG (Linked Lists)",
 "Seen_On": "Spring 2019",
 "Problem_Statement": "Consider the following code attached.\n Draw a linked list that simultaneously satisfies both of the following properties:\n1.\n The linked list has exactly four nodes.\n Be sure to indicate the integer value contained in\neach node.\n\n2.\n If the linked list were passed to the function above, the program would either crash with a\nsegmentation fault, get stuck in an infinite loop, or crash as a result of a stack overflow\n(infinite recursion).\n\nNote: When this function is first called, the head of your linked list will be passed as both arguments to\nthe function, like so:\n doTheThing(head, head);\nHint: Notice that all the recursive calls always pass head as the first parameter.\n So, within this function,\nhead will always refer to the actual head of the linked list.\n The second parameter is the only one that\never changes.\n",
 "Problem_Code": "void doTheThing(node *head, node *current)\n {\n if (current == NULL)\n return;\n else if (current == head->next)\n {\n if (current->data == head->next->next->data)\n doTheThing(head, head->next->next->next);\n else if (current->data == head->next->next->data + 1)\n doTheThing(head, head->next->next->next->next);\n else if (current->data == head->next->next->data + 5)\n doTheThing(head, current->next->next->next);\n else if (current->data == head->next->next->data + 10)\n doTheThing(head, head->next);\n else\n doTheThing(head, current->next);\n }\n else\n doTheThing(head, current->next);\n }\r",
 "Solution": "The only way to get wrecked with this code is to trigger the doTheThing(head, head->next) call.\nSince we only trigger that call when current == head->next, then making that recursive call results in\ninfinite recursion. That specific recursive call is only executed when current == head->next (i.e., when current is the\nsecond node in the linked list) and when that second node has a value that is 10 greater than the value in\nthe third node. 10 points for a correct answer.\nNote: If the 2nd node has a value 10 less than the 3rd node, still award 10/10.\n5 points if the 2nd node has a value 1 greater than the 3rd node, thereby triggering the head->next-\n>next->next->next access. That doesn\u2019t cause a segfault, but it\u2019s an understandable mistake and is the\nnext best thing.\nNote: If the 2nd node has a value 1 less than the 3rd node, still award 5/10.\n2 points otherwise, as long as they draw a linked list with exactly four nodes, and each node contains an\ninteger. (Also, any circular list with 4 nodes gets 2 points maximum.)\n0 points otherwise."
}