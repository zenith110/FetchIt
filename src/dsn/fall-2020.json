{
 "Problem_Name": " (10 pts) DSN (Dynamic Memory Management in C)",
 "Seen_On": "Fall 2020",
 "Problem_Statement": "Suppose we are planning a party and we would like to create an array to store our list of supplies.\n Currently\nour list is stored in a text file with the name of each item to be purchased on a line by itself.\n Write a\nfunction called make_grocery_list that reads these items from a file and stores them in a two-dimensional\ncharacter array.\n Your function should take 2 parameters: a pointer to the file and an integer indicating the\nnumber of grocery items in the file.\n It should return a pointer to the array of items.\n Be sure to allocate\nmemory for the array dynamically and only allocate as much space as is needed.\n You may assume that all\nof the strings stored in the file representing grocery items are alphabetic strings of no more than 127\ncharacters (so the buffer declared is adequate to initially read in the string).\n",
 "Problem_Code": "#include <stdlib.h>\n#include <string.h>\n#include <stdio.h>\nchar ** make_grocery_list (FILE *ifp, int numItems) {\nchar buffer[128];\nchar **list = NULL;\nint i;\r}",
 "Solution": "char ** make_grocery_list (FILE *ifp, int numItems) {\nchar buffer[128];\nchar **list = NULL;\nint i;\n// Grading \u2013 2 pts\nlist = malloc(sizeof(char *) * numItems);\n// Grading: 6 pts - 1 pt loop, 1 pt read, 4 pts malloc,\n // 1 pt strcpy\n for(i = 0; i < numItems; i++) {\n fscanf(ifp, \"%s\", buffer);\n list[i] = malloc(sizeof(char) * (strlen(buffer) + 1));\n strcpy(list[i], buffer);\n }\n// Grading \u2013 1 pt\n return list;\n // Grading notes - 1 pt off for = vs strcpy, 1 pt off for\n // forgetting the +1 in the inner malloc.\n\n}"
}